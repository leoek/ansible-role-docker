---
#tasks file for role

- name: install stuff which allows apt to use repositorys over https
  become: true
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common

- name: Get release
  become: true
  command: lsb_release -cs
  register: command_release
  changed_when: (command_release.stdout != 'stretch') and (command_release.stdout != 'jessie') and (command_release.stdout != 'xenial') and (command_release.stdout != 'trusty') and (command_release.stdout != 'disco') and (command_release.stdout != 'buster') and (command_release.stdout != 'focal')

- name: add dockers official gpg key
  become: true
  apt_key:
    keyserver: "{{ docker_gpg_server }}"
    id: "{{ docker_gpg_key }}"
  register: add_repository_key
  ignore_errors: true

- name: by base_system.name | add dockers official gpg key second try
  become: true
  apt_key:
    id: 0EBFCD88
    url: https://download.docker.com/linux/{{ base_system.name }}/gpg
    state: present
  when: |
    add_repository_key is failed and base_system is defined

- name: by ansible_distribution | add dockers official gpg key second try
  become: true
  apt_key:
    id: 0EBFCD88
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present
  when: |
    add_repository_key is failed and base_system is not defined

# For unknown reasons this task is not python3 compatible
- name: debian | add repository
  become: true
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ command_release.stdout }} stable
    state: present
    filename: 'docker'
  when: |
    ((base_system is defined) and (base_system.name == 'debian')) or
    (command_release.stdout == 'stretch') or
    (command_release.stdout == 'jessie') or
    (command_release.stdout == 'buster')
  vars:
    ansible_python_interpreter: python

- name: ubuntu | add repository key
  become: true
  apt_key:
    keyserver: "{{ docker_ubuntu_gpg_server }}"
    id: "{{ docker_ubuntu_gpg_key }}"
  when: |
    ((base_system is defined) and (base_system.name == 'ubuntu')) or
    (ansible_distribution | lower == 'ubuntu')

- name: ubuntu | add repository with version_name from host vars
  become: true
  apt_repository:
    #repo: "deb https://apt.dockerproject.org/repo ubuntu-{{ base_system.version_name }} main"
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ base_system.version_name }} stable
    state: present
    filename: 'docker'
  when: | 
    ((base_system is defined) and
    (base_system.name == 'ubuntu') and
    (base_system.version_name is defined))

- name: ubuntu | add repository with name read from system
  become: true
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ command_release.stdout }} stable
    state: present
    filename: 'docker'
  when: | 
    (command_release.stdout == 'xenial') or
    (command_release.stdout == 'trusty') or
    (command_release.stdout == 'disco') or
    (command_release.stdout == 'focal') or
    (command_release.stdout == 'hirsute')

- name: install docker-ce
  become: true
  apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: present
    update_cache: yes

- name: "enable and start docker service"
  become: true
  systemd:
    name: docker
    state: started
    enabled: yes
